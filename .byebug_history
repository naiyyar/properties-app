continue
Listing.transfer_to_past_listings_table(listings)
continue
listings.find_in_batches(batch_size: 500){|list| puts list.}
listings.find_in_batches(batch_size: 500){|list| puts list.class}
listings.find_in_batches(batch_size: 500){|list| puts list.attributes}
listings.find_in_batches(batch_size: 500){|list| puts list}
Listing.transfer_to_past_listings_table(listings)
continue
Listing.transfer_to_past_listings_table(listings)
Listings.transfer_to_past_listings_table(listings)
listings = Listing.between(@from_date, @to_date)
Listing.between(@from_date, @to_date).pluck(:date_active).uniq
Listing.between(@from_date, @to_date).pluck(:date_active)
Listing.between(@from_date, @to_date).count
Listing.between(@from_date, @to_date)
continue
@lng
@lat
@boundary_coords
continue
buildings.pluck(:id)
searched_buildings.pluck(:id)
fbs
fbs.map(&:building_id)
fbs.where(id: fbs.map(&:building_id))
fbs = FeaturedBuilding.active_featured_buildings(ids)
FeaturedBuilding.active_featured_buildings(ids)
ids = buildings.map(&:id)
buildings.map(&:id)
buildings.count
featured_buildings
continue
@building.active_comps.first.building.name
@building.active_comps
@building.building_name
active_comps.count
continue
@search_string == 'Flatbush   Ditmas Park'
terms_arr
@search_string = terms_arr.join(' ').titleize
@search_string = terms_arr.pop
@borough_city  = terms_arr.last
terms_arr      =  search_term.split('-')
search_term = params[:search_term]
params
@search_string
params[:search_term]
params['search_term']
continue
params[:controller].split('/')
params[:controller].include?('buttercms')
params[:controller]
params
continue
@building
continue
params[:building]
action_name
@building
address.present? && zipcode.present?
params['buildings-search-txt']
params[:building][:zipcode]
params[:building][:building_street_address]
params
@building
continue
pop.each{ |nb| pop_h[nb.name] = nb.buildings_count }
pop.each{ |nb| @pop_h[nb.name] = nb.buildings_count }
pop_h = {}
pop = Neighborhood.select(:name, :buildings_count)
pop = {}
pop = Neighborhood.select(:name, :buildings_count)
pop_neighborhoods.each{ |nb| @pop_nb_hash[nb.name] = nb.buildings_count }
pop_neighborhoods
pop_neighborhoods.select(:name, :buildings_count).as_json
pop_neighborhoods.select(:name, :buildings_count).group(:name, :buildings_count)
pop_neighborhoods.select(:name, :buildings_count).group(:name)
pop_neighborhoods.select(:name, :buildings_count).as_json
pop_neighborhoods.select(:name, :buildings_count).to_json
pop_neighborhoods.select(:name, :buildings_count)
pop_neighborhoods
@pop_nb_hash
continue
params
controller_name
continue
current_user&.admin?
current_user.admin?
current_user.roles
current_user
continue
@min_price.to_i > 0 || @max_price > 0
@max_price
@max_price.present?
@min_price.to_i
@listings.count
continue
@listings.with_beds(['2']).count
@listings.with_beds(['2'])
params[:filter][:listing_bedrooms].flatten
params[:filter][:listing_bedrooms]
@bedrooms
params[:filter][:listing_bedrooms].kind_of? Array
params[:filter][:listing_bedrooms]
params[:filter]
params
@listings  = building.listings
building.listings.active
Filter::Listings.new(building, 'active', params[:filter]).active_listings
building.active_listings(params[:filter]).size
params[:filter]
@listings_count
@all_buildings.count
@active_listings_count.fetch(building.id)
@active_listings_count.methods
@active_listings_count[building.id]
@active_listings_count
building
listings_count
continue
building.all_three_cta?(listings_count)
listings_count
continue
@bedrooms
@bedrooms = @bedrooms.split(' ')
@bedrooms.present?
@amenities.present?
continue
@all_buildings.sum(:reviews_count)
@all_buildings.sum(:uploads_count)
@buildings.count
@all_buildings.count
@all_buildings      = final_results[0][:all_buildings]
@per_page_buildings = final_results[1]
final_results       = Building.with_featured_building(@buildings, page_num)
page_num            = params[:page].present? ? params[:page].to_i : 1
@buildings          = @buildings.includes(:building_average, :featured_buildings)
@lng
@lat
@lat, @lng = latlng
latlng
@buildings.sum(:reviews_count)
@buildings.sum(:uploads_count)
@buildings.present?
continue
(@total_rates.to_f/review_count)
star_counts
@total_rates
continue
@hash
@hash.to_json
@lng
@lat
continue
listings_count.length
listings_count
continue
params
continue
building.active_listings_count
continue
building.active_listings_count
continue
building.active_listings_count
continue
@all_buildings.first.active_listings_count
@all_buildings.first
@all_buildings.count
building.methods
building.attributes
@listings_count
building.active_listings_count
building.instance_methods
building
continue
@listings_count
building.active_listings
building
continue
params[:filter]
params
continue
listing_filter_params
continue
@bedrooms
@bedrooms.present?
@amenities.present?
continue
listing_filter_params
@bedrooms.present?
@amenities.present?
filtered_listings.count
filtered_listings
@listing_type
continue
params[:filter]
params
params[:filter_params]
continue
@min_price.present?
@max_price
@min_price
@min_price.present?
@listings.count
@listings = @listings.with_beds(@bedrooms.split(' ').map(&:to_i))
@listings.count
@bedrooms.split(' ').map(&:to_i)
@bedrooms
@bedrooms.present?
@amenities
@amenities.present?
@ameniti@amenities.present?
continue
listing_type
listing_filter_params[:list_amenities]
listing_filter_params
continue
filtered_listings.pluck(:id)
filtered_listings
filtered_listings.count
continue
@bedrooms.split(' ').map(&:to_i)
@bedrooms.split(' ')
@building_listings
@building_listings.last
listing
@bedrooms.split(' ')
@building_listings = @building_listings.with_prices(@min_price, @max_price)
@building_listings.count
@building_listings = @building_listings.with_beds(@bedrooms.split(' '))
@bedrooms.split(' ')
@bedrooms
amenities.include?('rent_stabilized')
@building_listings.count
@building_listings = @building_listings.owner_paid
@building_listings.count
@building_listings = @building_listings.months_free
amenities.include?('months_free_rent')
amenities
@building_listings.count
@building_listings
continue
params[:filter_params][:list_amenities].split(' ')
params[:filter_params][:list_amenities].plit('')
params[:filter_params][:list_amenities]
params[:filter_params]
@building.listings.active.first
params[:filter_params]
params
continue
Building.where(building_street_address: row['building_address'])
@building
row
row['building_address']
continue
