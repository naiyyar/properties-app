continue
pd_response.parsed_response
pd_response
continue
response.parsed_response['routes'][0]['legs']
response = HTTParty.get(dir_api_url)
dir_api_url = "https://maps.googleapis.com/maps/api/directions/json?origin=#{origin}&destination=#{dest_station}&mode=transit&transit_mode=subway|rail&key=#{key}"
response.parsed_response['routes'][0]['legs']
response = HTTParty.get(dir_api_url)
dir_api_url = "https://maps.googleapis.com/maps/api/directions/json?origin=#{origin}&destination=#{dest_station}&mode=transit&transit_mode=subway&key=#{key}"
origin = latlng
dest_station = 'Grand Central-42 Street Station'
building_street_address
nearby_subway_stations
continue
step['transit_details']['line']['icon']
step['travel_mode']
step['travel_mode'] == 'TRANSIT' && step['distance']['text'].to_f < 0.5
continue
step['transit_details']['line']['vehicle']['icon']
step['travel_mode'] == 'TRANSIT' && step['distance']['text'].to_f < 0.5
step['transit_details']['line']['icon'].present?
step['travel_mode'] == 'TRANSIT'
continue
step['transit_details']['line']['vehicle']['icon']
step['transit_details']['line']['vehicle']
step['transit_details']['line']
['transit_details']['line']
step['transit_details']
step['transit_details']['line']['icon'].present?
step['distance']['text'].to_f < 0.5
step['travel_mode'] == 'TRANSIT'
step
continue
result['steps'][7]
result['steps'][6]
result['steps'][5]
result['steps'][4]
result['steps'][3]
result['steps'][2]
result['steps'][1]
result['steps'][0]
result['steps'].length
result['steps']
result['distance']['text']
continue
@distance_results.length
result['steps'][1]['transit_details']
result['steps'][1]['travel_mode']
result['steps'][1]['travel_mode']['transit_details']
result['steps'][1]['travel_mode']
result['steps'].length
result['steps']
result['steps'][0]['travel_mode']
continue
result['steps'][0]['travel_mode']
result['steps'].length
result['steps']
result
step
step['travel_mode'] == 'TRANSIT'
step
continue
result['end_address'].split(',')[0]
result['end_address'].split(',')
result['end_address']
result
result['steps']
result['steps'][1]['transit_details']['line']['icon']
result['steps'][1]['transit_details']['line']
result['steps'][1]['transit_details']['icon']
result['steps'][1]['transit_details']['arrival_stop']['name']
result['steps'][1]['transit_details']['name']
result['steps'][1]['transit_details']
result['steps'][1]
result['steps'].map{|s| s['travel_mode']}
result['steps']
"#{result['duration']['text']} walk, #{result['distance']['text']} away"
result
continue
@distance_result.present?
@distance_result.flatten.length
@distance_result.length
@distance_result
continue
@distance_result
continue
result['routes'][0]['legs']
result['routes']['legs']
result['routes']
result.class
result = response.parsed_response
response = HTTParty.get(dir_api_url)
dir_api_url = "https://maps.googleapis.com/maps/api/directions/json?origin=#{origin}&destination=#{dest_station}&mode=transit&transit_mode=subway&key=#{key}"
origin = @building.building_street_address
dest_station = 'Grand Central-42 Street Station'
dest_station = Grand Central-42 Street Station
nearby_subway_stations
nearby_subway_stations = result['results'].map{|r| r['name']}.uniq
result['results'].map{|r| r['name']}.uniq
result['results'].map{|r| r['name']}
result['results'][0].map{|r| r['name']}
result['results'][0]['name']
result['results'][0]['types']
result['results'][0].types
result['results'].length
result['results'][0]
result['results'][:types]
result['results']['types']
result['results']['vicinity']
result['results'].icon
result['results']
result = response.parsed_response
response = HTTParty.get(nearby_subway_stations)
response = HTTParty.get(dir_api_url)
nearby_subway_stations = "https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=#{latlng}&radius=1500&type=subway_station&key=#{key}"
latlng = "#{@building.latitude}, #{@building.longitude}"
https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=-73.9757994,40.7432305&radius=1500&type=subway_station&key=#{key}
key
"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=-73.9757994,40.7432305&radius=1500&type=subway_station&key=#{key}"
https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=-73.9757994,40.7432305&radius=1500&type=subway_station&key=#{key}
"#{@building.latitude}, #{@building.longitude}"
continue
Building.near([@building.latitude, @building.longitude], 20).last(10).map(&:building_street_address)
Building.near([@building.latitude, @building.longitude], 20).first(10)
Building.near([@building.latitude, @building.longitude], 2).first(10).map(&:building_street_address)
Building.near([@building.latitude, @building.longitude], 2).first(10)
Building.near([@building.latitude, @building.longitude], 2).length
Building.near([@building.latitude, @building.longitude], 5).length
Building.near([@building.latitude, @building.longitude], 5).count
Building.near([@building.latitude, @building.longitude], 5)
continue
dir_api_url = "https://maps.googleapis.com/maps/api/directions/json?origin=#{origin}&destination=#{destination}&mode=transit&transit_mode=subway&key=#{key}"
response.parsed_response
response = HTTParty.get(dir_api_url)
dir_api_url = "https://maps.googleapis.com/maps/api/directions/json?origin=#{origin}&destination=#{destination}&mode=transit&transit_mode=subway&key=#{key}"
response.parsed_response
response = HTTParty.get(dir_api_url)
dir_api_url = "https://maps.googleapis.com/maps/api/directions/json?origin=#{origin}&destination=#{destination}&mode=transit&key=#{key}"
response.parsed_response
continue
@building.building_street_address
origin
destination
result = response.parsed_response
response = HTTParty.get(distance_matrix_api_url)
distance_matrix_api_url = "https://maps.googleapis.com/maps/api/distancematrix/json?origins=#{origin}&destinations=#{destination}&key=#{api}&mode=#{modes}"
modes = ['SUBWAY']
distance_matrix_api_url = "https://maps.googleapis.com/maps/api/distancematrix/json?origins=#{origin}&destinations=#{destination}&key=#{api}&mode=#{modes}"
api = 'AIzaSyDZtWN-GlVsIjuQMP8xN5dit3PmlMb-qjA'
api
distance_matrix_api_url = "https://maps.googleapis.com/maps/api/distancematrix/json?origins=#{origin}&destinations=#{destination}&key=#{api}&mode=#{modes}"
continue
result = response.parsed_response
response = HTTParty.get(distance_matrix_api_url)
distance_matrix_api_url = "https://maps.googleapis.com/maps/api/distancematrix/json?origins=#{origin}&destinations=#{destination}&key=#{ENV['GEOCODER_API_KEY']}"
continue
Price.where(bed_type: key, range: params[:range])
params[:range]
value
key
params
params[:price]
params[:price
continue
@prices
@prices.where(range: option[1])
@prices.where(range: option[1]).length
option[1]
continue
@prices.where(range: option[1]).length
@prices.where(range: option[1])
option[1]
option
continue
@building.prices
@building.price
@building
params[:price]
params
continue
 @buildings.text_search(params[:term])
 @buildings.text_search(params[:term]).count
@buildings = Building.where('management_company_id is null')
params
continue
 request.format.html? == nil
 request.format.html?
 request.format.symbol?
 request.format.string?
request
 request.format
 request.format.html?
continue
 request.format.html?
continue
city.gsub(' ', '')
city
continue
@companies.limit(5)
@companies
.result(distinct: true)
continue
@companies.as_json
@companies.to_json
@companies
continue
@neighborhoods.count
@neighborhoods
params
continue
@neighborhoods
params
continue
@companies
v
@city
@zipcodes
@buildings
@neighborhoods
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
ManagementCompany.text_search_by_management_company(params[:term])
params
continue
params
continue
params
continue
params
@buildings
@zipcodes
@city
@companies
continue
params
continue
RatingCache.where(cacheable_id: self.id, cacheable_type: 'Building', dimension: DIMENSIONS)
DIMENSIONS
continue
RatingCache.where(cacheable_id: @building.id)
RatingCache.where(cacheable_id: @building.id).count
rating_for @building, 'cleanliness'
continue
