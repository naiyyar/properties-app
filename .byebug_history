continue
current_user && !current_user.has_role?(:admin)
if current_user && !current_user.has_role?(:admin)
continue
session[:object_type]
session[:form_data]['contribution']
session[:form_data]
continue
session[:form_data]
params
continue
auth = request.env['omniauth.auth']
continue
auth.info
auth = request.env['omniauth.auth']
continue
auth.info
auth = request.env['omniauth.auth']
continue
auth.info
auth = request.env['omniauth.auth']
continue
auth.info.name
auth.info.email
auth.info
auth.email
User.where(provider: auth.provider, uid: auth.uid)
auth.uid
auth.provider
auth = request.env['omniauth.auth']
request.env['omniauth.auth']
@user
continue
params.methods
params
params.inspect
continue
params
super
continue
params
continue
params
continue
self.neighborhood == neighborhoods[0]
self.neighborhood != neighborhoods[0]
neighborhoods
continue
search[2]
search[2].address_components_of_type(:neighborhood)
search[1].address_components_of_type(:neighborhood)
search.first.address_components_of_type(:neighborhood)
search[1]
search[0]
search[0..3]
continue
session[:form_data]['contribution']
continue
session[:form_data]['contribution']
session[:contribution]
session[:contribution_for]
session[:contribution]
session
object
contribution_for
continue
params
continue
session[:contribution_for]
session
params
continue
params
params[:building][:units_attributes]['0'][:building_id] = 123
params[:building][:units_attributes]['0']
params[:building][:units_attributes]
params[:unit_contribution]
params
continue
session
params
continue
session[:form_data]['building']['zipcode']
session[:form_data]['building'][:zipcode]
session[:form_data]['building']
session[:form_data][:building]
session[:form_data][:building][:building_name].present?
params[:building][:building_name].present?
session[:form_data]
session[:form_date]
params
continue
session[:search_term]
session
params
continue
params.instance_of? Building
params
params.class
params.class.class_eval{}
params.class_eval{}
params.class_eval(:building)
params.class_eval
params.methods
params
continue
session[:building_id]
continue
session[:building_id]
session
params
continue
Building.find(157)
params
continue
params
continue
resource.errors.full_messages
resource.errors
resource
params
continue
request.original_url
request.query_stri
request.original_path
request.parameters
request.path_parameters
request.methods
request.params
request.fullpath
params
continue
params
continue
request.fullpath
continue
request.fullpath
request.full_path
continue
session[:previous_url]
params
continue
params
continue
params
continue
params['apt-search-txt'].split(',')[0]
params
continue
self.average('building').avg
self.average('building').count
self.average('building')
self.rates('building').count
self.rates('building')
self.rates
self
continue
params[:controller] != 'home' && params[:action] != 'index'
params[:controller] != 'home' and params[:action] != 'index'
params
continue
coordinates
continue
@building.units.(:reviews)
@building.units.includes(:reviews)
@building.units.include(:reviews)
@building.units.count
@building.units
@buiding.units
continue
object.uploads
object.kind_of? Unit
object.kindof? Unit
object.kindof> Unit
object
continue
4/5.to_f
2/3
4/5
5/4
((4/5)*100).round(2)
(4/5*100).round(2)
5/4*100
5/5*100
5/4
4/5
4/5*100
like_votes
total_votes
continue
@building.votes.where(vote: true).count
@building.votes.count
@building.votes
continue
params
continue
@zoom
continue
params
continue
@buildings.order(:building_name)
@buildings[2]
@buildings[1]
@buildings[0]
@buildings.count
continue
@buildings.count
continue
self.uploads.last.image
self.uploads.last
self.uploads.present?
continue
params
continue
upload_params
uploadparams
params
continue
rating_user
continue
search.present?
params
continue
params['apt-search-txt'].split(' - ')
search.first.types[0]
search = Geocoder.search(params['apt-search-txt'])
params['apt-search-txt'].split(',')[0]
params['apt-search-txt']
params
continue
!rateable_obj.can_rate?(current_user, dimension)
rateable_obj.can_rate?(current_user, dimension)
current_user.present?
current_user
continue
@devise_mapping 
:user
user
resource
continue
params
continue
@reviewable
continue
search[0]
  @chrysler_building,
  @brooklyn_bridge,
Geocoder::Calculations.geographic_center([
Building.near(self.building_street_address, 20)
Venue.near(10)
Building.near(10)
self.nearby(5)
self
@building
continue
search[12].data
