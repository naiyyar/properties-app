continue
videos.pluck(:category).uniq.sort
videos.pluck(:category).uniq
continue
categories(videos)
second_category(videos)
continue
@rentals
rentals
params
type
continue
contribute_page?
show_full_width_footer?
continue
@past_listing.count
continue
filtered_listings
@date_active
@date_active.present?
@listing_type
continue
@building.get_listings(nil, 'past').where('date_active <= ?', params[:date_active]).count
params
continue
params
continue
params
continue
@all_inactive_listings
@all_inactive_listings.present?
type
continue
@featured_agents.group_by{|a| a.neighborhood}
@featured_agents.group_by{|a| a.neighborhood}.keys
@featured_agents.group_by{|a| a.neighborhood}
@featured_agents.group(:neighborhood)
continue
b.max_listing_price
b.min_listing_price
b.prices
b.min_and_max_price?
filters
b.has_only_studio?(filters)
b.bedroom_types?
b.id
continue
videos.pluck(:category).uniq.sort
second_category
first_category
tour_videos.length
continue
buildings    = buildings.with_listings_bed(listing_beds)
buildings    = buildings.with_active_listing.join_with_listings
buildings.pluck(:id)
buildings.length
buildings.where('listings.bed = ?', '-1')
buildings.where('listings.bed = ?', -1)
listing_beds.to_i
listing_beds
buildings.where('listings.bed in (?)', listing_beds)
buildings.with_listings_bed(listing_beds)
max_price
listing_beds
continue
@post
continue
Building.left_outer_joins(:featured_comps).distinct.select()
Building.left_outer_joins(:featured_comps).where('featured_comps.building_id = ?', @building.id).length
Building.left_outer_joins(:featured_comps).count
Building.left_outer_joins(:featured_comps)
@building.active_comps
@similar_properties.count
@similar_properties
continue
@similar_properties
continue
@video_tours.keys
@video_tours
@category 
@video_tours, @category = VideoTour.videos_by_categories(@video_tours, @loaded_category)
params[:loaded_category]
params
continue
@video_tours.keys
@video_tours
continue
results.pluck(:city)
nb_city(term_with_city)
term_with_city
search_term
continue
@all_buildings.count
@buildings.count
building_counter
continue
@filters.present?
search_term.split('-').join(' ').titleize
search_term = @search_term
@filters
@search_term
continue
@filters
@filters.present?
continue
FeaturedBuilding.active.where(building_id: buildings.pluck(:id)).count
FeaturedBuilding.active.where(building_id: buildings.pluck(:id))
featured_building_ids.shuffle[0..1]
buildings.pluck(:id)
f_buildings
continue
featured_building_ids.shuffle[0..1]
featured_building_ids
buildings
continue
@similar_properties.present? or object.featured?
continue
@similar_properties.present? or object.featured?
object.featured?
object
resource
continue
featured_building_ids.shuffle[0..1]
featured_building_ids.shuffle[0..2]
buildings.where(id: featured_building_ids.shuffle[0..2]).length
buildings.where(id: featured_building_ids.shuffle[0..1]).length
buildings.where(id: featured_building_ids.shuffle[0..1])
buildings.where(id: featured_building_ids.shuffle[0..1]).length
buildings.where(id: featured_building_ids.shuffle[0..1])
featured_building_ids.shuffle[0..1]
buildings = buildings_in_neighborhood(search_string.downcase)
buildings_in_neighborhood(search_string.downcase).count
featured_building_ids
searched_by
search_string
continue
object_counter
continue
object_counter
continue
object_counter
continue
object_counter
continue
object_counter
object.kind_of?(FeaturedAgent)
index
continue
@others.map(&:id)
@first_four.map(&:id)
@others     = @all_buildings - @first_four
@first_four = @all_buildings.first(4)
(@all_buildings - @first_four).map(&:id)
@all_buildings.first(4).map(&:id)
@all_buildings.map(&:id).
@per_page_buildings.map(&:id)
@per_page_buildings.length
@all_buildings.length
continue@all_buildings.first(4)
continue
building
continue
building
continue
building
continue
building
continue
building.featured?
building
continue
building
building.featured?
continue
building.featured?
@filter_params
building
continue
set_bed_ranges(building, params[:filter])
continue
set_bed_ranges(building, params[:filter])
building.full_street_address
continue
building.full_street_address
building.full_address
building.id
set_bed_ranges(building, params[:filter])
params[:filter]
continue
agents.pluck(:neighborhood)
neighborhood(nb)
agents
continue
queens_children.include?(nb)
nb
continue
parent_neighborhoods_count(nb)
@pop_nb_hash[nb].present?
@pop_nb_hash[nb]
options[:show_count]
options
continue
request.fullpath
params
continue
params
continue
@featured_agent.end_date.to_s(:no_timezone)
@featured_agent.expired?
@featured_agent
continue
params
continue
neighborhood(nb)
nb
continue
params
continue
@featured_agent
params
continue
FeaturedAgent.where(neighborhood: @search_string).active.order('RANDOM()').limit(1)
@search_string
continue
params
continue
review.uploads.first.image.url
review.uploads.first.url
review.uploads
review.uploads.present?
continue
buildings.months_free.map(&:id)
buildings.map(&:id)
buildings.months_free.length
buildings.months_free.count
buildings.months_free
Building.find(273).listings.active.months_free
Building.find(271).listings.active.months_free
Building.find(271).listings.active.count
Building.find(271).listings.ative.count
buildings.pluck(:id, :listings_count)
continue
Building.with_active_listing.join_with_listings.months_free.map(&:id)
Building.with_active_listing.join_with_listings.months_free.map(&:id).length
Building.with_active_listing.left_outer_joins(:listings).distinct.months_free.map(&:id).length
Building.with_active_listing.left_outer_joins(:listings).distinct.months_free.map(&:id)
Building.with_active_listing.left_outer_joins(:listings).months_free.map(&:id)
Building.with_active_listing.left_outer_joins(:listings).months_free.length
Building.with_active_listing.left_outer_joins(:listings).months_free
Building.left_outer_joins(:listings).months_free.count
Building.find(273).listings.where('free_months > ?', 0).active.count
Building.find(273).listings.where('free_months > ?', 0).count
Building.find(273).listings.where('free_months is not null').active.count
Building.find(273).listings.where('free_months is not null').count
buildings.months_free.pluck(:id)
buildings.months_free.length
