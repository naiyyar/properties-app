continue
params
continue
params
continue
params
continue
params[:building_id]
params
continue
params
continue
params[:vote] != 'true'
continue
vote.save
vote.voter_id = current_user.id
vote.vote_flag = false
vote.votable = @reviewable
vote = ActsAsVotable::Vote.new
continue
@reviewable.downvote_from current_user
params[:vote] == 'true'
params
continue
User::Vote
@reviewable.votable
@reviewable.vote
@reviewable.vote_down current_user
@reviewable.liked_by current_user
params
continue
@reviewable.vote_by :voter => current_user, :vote => 'bad'
continue
params[:vote] == true
params[:vote] == 'true'
params[:vote] == 'true' || params[:vote] == true
params
continue
params
continue
params
continue
params
continue
params[:vote]==true ? 'anna' : 'anni'
params[:vote]is? true ? 'anna' : 'anni'
params[:vote] ? 'anna' : 'anni'
params[:vote]
params
continue
params[:review][:vote]
!params[:review][:vote]
params[:review][:vote]
params[:vote]
params
continue
@building.get_likes.size
@building
@building.votes.size
@building.votes.aise
@building.
@building.votes
Vote
continue
review.user.votes.up.by_type(Building).size
review.user.votes.up.by_type(Building)
review.user.votes.up
review.user.votes
@building.downvote_from(review.user).size
@building.downvote_from review.user
@building.liked_by review.user
continue
@reviewable = Building.find_by_building_street_address(params['buildings-search-txt'])
Building.find_by_building_street_address(params['buildings-search-txt'])
 Building.where(building_street_address: params['buildings-search-txt']).first
params['buildings-search-txt']
params[:buildings-search-txt]
params
continue
params
continue
@unit = Unit.create(params[:unit])
@building = Building.create(building_params)
params[:unit]
params
continue
session[:form_data]
resource
session[:form_data]
params
continue
params
continue
params[:vote]
params
continue
params
continue
user_steps_path(name: 'anna', id: '1')
user_steps_path(name: 'anna')
user_steps_path
params
continue
params
continue
params[:contribution].present?
params[:contribution]
params
continue
@buildings.map{|b| [b.building_name, b.building_street_address]}
@buildings.map{|b| [b.building_name, building_street_address]}
continue
Building.search(params[:term])
params
continue
Building.search(params[:term])
params[:term] = 'club'
Building.search(params[:term])
params[:term] = 'th'
Building.search(params[:term])
params[:term]
params
@buildings
continue
self.where("building_name LIKE ? or building_street_address LIKE ?", "%#{term}%", "%#{term}%")
term = "nai"
term
self.where("building_name LIKE ? or building_street_address LIKE ?", "%#{term}%", "%#{term}%")
self
term
continue
Building.search('turtle')
Building.search(params[:term])
params
continue
@buildings_name+@buildings_address
@buildings_address = @buildings.map(&:building_street_address)
@buildings_name = @buildings.map(&:building_name)
@buildings.map([&:building_name, &:building_street_address])
@buildings.map(&:building_name, &:building_street_address)
@buildings.map(&:building_name)
continue
rateable_obj.can_rate?(current_user, dimension)
rateable_obj.can_rate?(current_user.id, dimension)
rateable_obj.can_rate?(current_user.id.to_s, dimension)
current_user.id
rateable_obj.can_rate?(current_user.id, dimension)
rateable_obj
dimension
disable_after_rate = options[:disable_after_rate] && true
current_user.id
current_user
options
continue
rateable_obj.can_rate?(current_user.id, dimension)
disable_after_rate = options[:disable_after_rate] || false
options
continue
rate.save
rate.stars = session[:form_data]['score']
rate.save
rate.dimension = reviewable.class.name.downcase
rate.rateable_type = reviewable.class.name
rate.rateable_id = reviewable.id
rate.rater_id = current_user.id
rate = Rate.new
session[:form_data]['score']
reviewable.rate
reviewable.rates
session[:form_data]
continue
session[:form_data]['score']
session[:form_data]
session
params
continue
session[:form_data]['vote'] ? 'abc' : 'xyz'
session[:form_data]['vote']=='true'
session[:form_data]['vote']==true
session[:form_data]['vote']
session[:form_data][:vote]
session[:form_data]
continue
review
reviewable.reviews.build(session[:form_data][:review])
review = reviewable.reviews.build(session[:form_data]['review'])
reviewable = find_reviewable
session[:form_data]['review']
session[:form_data][:review]
session[:form_data]
params
continue
find_reviewable
continue
params
params[:building_id]
params[:review][:building_id]
find_reviewable
session[:form_data]
continue
session[:form_data]
resource
continue
session[:form_data]
current_user.blank?
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
upload.imageable.name
upload.imageable
upload
continue
@building.uploads
@building
continue
upload_params
params
continue
find_imageable
params.require(:upload).permit(:image, :imageable_id, :imageable_type, :user_id)
params
continue
params
continue
params
continue
@building.reviews
@building
continue
@reviews
current_user.reviews
current_user
continue
@building.reviews
@building
User.first.reviews
User.first
user.first
