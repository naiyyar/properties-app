<input type="text" name="lat" class="hidden lat" value="<%=@lat%>" />
<input type="text" name="lng" class="hidden lng" value="<%=@lng%>" />
<input type="text" name="lng" class="hidden zoom" value="<%=@zoom || 13 %>" />

<script type="text/javascript" charset="utf-8">
	json_array = <%= raw @hash.to_json %> ;
	var position = '';
	<% if browser.device.mobile? %>
		position = google.maps.ControlPosition.TOP_LEFT
	<%else%>
		position = google.maps.ControlPosition.TOP_CENTER
	<%end%>
	var markers = '';
 	function build_map(sidebar, resize=false){
 		var lat = <%= raw @lat.to_json %>;
		var lng = <%= raw @lng.to_json %>;
		var zoom = <%= @zoom || 13 %>;

		var seach_term = <%= raw @brooklyn_neighborhoods.to_json %>
		
		options = {
			disableDoubleClickZoom: false,
			zoomControlOptions: { position: google.maps.ControlPosition.RIGHT_CENTER },
			mapTypeControl: true,
			mapTypeControlOptions: { 
																style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
																position: position
															},
			gestureHandling: 'greedy'
		}
	 	handler = Gmaps.build('Google');
	 	
	 	handler.buildMap({ provider: options, internal: { id: 'mapViewSearch' } }, function(){
		
	  	create_marker(json_array)
			//Plogon options
			//{ strokeColor: '#FF0000', strokeOpacity: 0.7, strokeWeight: 2, fillColor: '#FFFFFF', fillOpacity: 0.15 }#1a69a9
			polygons = handler.addPolygons( <%= raw @boundary_coords.to_json %> ,
		    	//{ strokeColor: '#0e5c9a', strokeWeight: 2.5, fillColor: '#0e5c9a', fillOpacity: 0.15  }
		    	{ strokeColor: '#1664a4', strokeWeight: 2.5, fillColor: '#0e5c9a', fillOpacity: 0.15  }
			);
			
			// Setting up boundaries using kml file
			brooklyn_and_queens_neighborhoods(seach_term) //In search.js
		
			
			if(sidebar){
		  	createSidebar(json_array);
			}
		});

		function create_marker(json_array){
			markers = handler.addMarkers(json_array);
			_.each(json_array, function(json, index){
		  	json.marker = markers[index];
		  	bindMarker(json.marker, markers, handler, lat, lng, zoom );
		  	google.maps.event.addListener(json.marker.getServiceObject(), 'click', function(){
          var infowindow = json.marker.infowindow;
          var building_id = json_array[index].marker_title.split(',')[0];
          $.post('/load_infobox', {
            object_id: building_id
          }, function(data){
            infowindow.setContent(data.html);
            infowindow.open(handler.getMap(), google.maps.markers[index]);
          });

        });
			});
		}
	
		//Hiding neighborhood search page infowindows
	  
	  $('.search, #header').click(function(){
	    closeInfoWindow(handler)
	  });

	  function closeInfoWindow(handler){
	    if(handler.currentInfowindow()) {
	      handler.currentInfowindow().close();
	    }
	  }
	  google.maps.event.addListener(handler.getMap(), 'click', function(){ closeInfoWindow(handler); });
	  
	  // Resizing map on ajax buiilding load
	  if(resize){
	  	resizeMapOnMapIconClick();
	  }
	}

	 function resizeMapOnMapIconClick(){
      var gmap = handler.getMap();
      setTimeout(function() {
          if (gmap) {
              google.maps.event.trigger(gmap, 'resize');
          }
          var lat = parseFloat($('.lat').val());
          var lng = parseFloat($('.lng').val());
          var zoom = parseInt($('.zoom').val());
          gmap.setZoom(zoom);
          gmap.setCenter(new google.maps.LatLng(lat, lng));

      }, 300);
  }
 
</script>