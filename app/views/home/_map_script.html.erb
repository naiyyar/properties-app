<input type="text" name="lat" class="hidden lat" value="<%=@lat%>" />
<input type="text" name="lng" class="hidden lng" value="<%=@lng%>" />
<input type="text" name="lng" class="hidden zoom" value="<%=@zoom || 13 %>" />

<script type="text/javascript" charset="utf-8">
	json_array = <%= raw @hash.to_json %> ;
	<% if browser.device.mobile? %>
		var position = google.maps.ControlPosition.TOP_LEFT
	<%else%>
		var position = google.maps.ControlPosition.TOP_CENTER
	<%end%>
	
	var lat = <%= raw @lat.to_json %>;
	var lng = <%= raw @lng.to_json %>;
	var zoom = <%= @zoom || 13 %>;
	var seach_term = <%= raw @brooklyn_neighborhoods.to_json %>;
	var marker_green = "<%=asset_path('marker-green.png')%>";
	var star_off = "<%=asset_path('star-off.png')%>";
 
  function initialize() {
    // Custom options for map
    var options = {
      disableDoubleClickZoom: false,
			zoomControlOptions: { position: google.maps.ControlPosition.RIGHT_CENTER },
			mapTypeControl: true,
			mapTypeControlOptions: { 
																style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
																position: position
															},
			gestureHandling: 'greedy',
    };

    var newMarker = null;
    var markers = [];
    // json for properties markers on map
    var props = json_array;
    // custom infowindow object
    var infobox = new InfoBox({
        disableAutoPan: false,
        maxWidth: 230,
        pixelOffset: new google.maps.Size(-118, -265),
        zIndex: null,
        boxStyle: {
            background: '#fff',
            opacity: 1,
            width: "230px",
            height: "auto"
        },
        closeBoxMargin: "10px 26px 0px 0px",
        closeBoxURL: "",
        infoBoxClearance: new google.maps.Size(1, 1),
        pane: "floatPane",
        enableEventPropagation: false
    });

    // function that adds the markers on map
    var addMarkers = function(props, map) {
        $.each(props, function(i,prop) {
            var latlng = new google.maps.LatLng(prop.latitude, prop.longitude);
            var marker = new google.maps.Marker({
                position: latlng,
                map: map,
                icon: new google.maps.MarkerImage( 
                    "<%=asset_path('red-dot.png')%>",
                    null,
                    null,
                    null,
                    new google.maps.Size(36, 36)
                ),
                draggable: false,
                //animation: google.maps.Animation.DROP,
            });
            // var placeholder_content = '<div class="infoW">'+
												// 						    '<div class="propImg animated-background" style="width: 230px !important; height: 137px;background-color: #ddd;"></div>'+
												// 						    '<div class="paWrapper">'+
												// 						      '<div class="propTitle animated-background" style="width: 100px !important; height: 15px;background-color: #ddd;"></div>'+
												// 						      '<div class="propAddress animated-background" style="width: 150 !important; height: 15px;background-color: #ddd;"></div>'+
												// 						    '</div>'+
												// 						  '<div class="propRating">'+
												// 						  	'<ul class="cardRating list-inline">'+
												// 						  			'<li><img src='+star_off+' /></li>'+
												// 						  			'<li><img src='+star_off+' /></li>'+
												// 						  			'<li><img src='+star_off+' /></li>'+
												// 						  			'<li><img src='+star_off+' /></li>'+
												// 						  			'<li><img src='+star_off+' /></li>'+
												// 						  	'</ul>'+	  
												// 							'</div>'+
												// 						'</div>'
            createSidebar(prop, marker);
            google.maps.event.addListener(marker, 'click', (function(marker, i) {
                return function() {
                	var building_id = json_array[i].id
                	//infobox.setContent(placeholder_content); //placeholder content
				          $.post('/load_infobox', {
				            object_id: building_id, building_show: false
				          }, function(data){
				            infobox.setContent(data.html);
				            //infowindow.open(handler.getMap(), google.maps.markers[index]);
				            infobox.setPosition(latlng);
				            infobox.open(map, marker);
				          });
                  
                  //infobox.setContent(infoboxContent);
                  //infobox.open(map, marker);
                }
                
            })(marker, i));

            $(document).on('click', '.closeInfo', function() {
                infobox.open(null,null);
            });

            markers.push(marker);
        });

    }

    var map;
    var windowHeight;
    var windowWidth;
    var contentHeight;
    var contentWidth;
    var isDevice = true;

    // calculations for elements that changes size on window resize
    var windowResizeHandler = function() {
      windowHeight = window.innerHeight;
      windowWidth = $(window).width();
      contentHeight = windowHeight - $('#header').height();
      contentWidth = $('#content').width();

      $('#leftSide').height(contentHeight);
      $('.closeLeftSide').height(contentHeight);
      $('#wrapper').height(contentHeight);
      $('#mapViewSearch').height(contentHeight);
      $('#content').height(contentHeight);
      
      if (map) {
        google.maps.event.trigger(map, 'resize');
      }
    }

    windowResizeHandler();
    $(window).resize(function() {
        windowResizeHandler();
    });
    
    var polylineoptons = {};
    <% if @boundary_coords.present? %>
	    polylineoptons = { 
			  paths: <%= raw @boundary_coords.to_json %>, 
			  strokeColor: '#1664a4', 
			  strokeOpacity: 0.7, 
			  strokeWeight: 2.5, 
			  fillColor: '#0e5c9a', 
			  fillOpacity: 0.15, 
			  clickable:false 
			}
		<%end%>

    var polylines = new google.maps.Polygon(polylineoptons);

    setTimeout(function() {
      $('body').removeClass('notransition');

      map = new google.maps.Map(document.getElementById('mapViewSearch'), options);
      map.setCenter(new google.maps.LatLng(lat,lng));
      map.setZoom(zoom);
      polylines.setMap(map);
			
			// Setting up boundaries using kml file
      addMarkers(props, map);
      brooklyn_and_queens_neighborhoods(seach_term, map) //In search.js
  	}, 300);
	}

	// Initialize the map
	google.maps.event.addDomListener(window, 'load', initialize);

</script>