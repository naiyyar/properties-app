<script src="https://maps.google.com/maps/api/js?v=3.36&key=<%=ENV['GEOCODER_API_KEY']%>&libraries=places"></script>
<script type="text/javascript">
  var map, map2, current_building_id, mob_map, infobox;
  var current_user_id = $('#cu').val();
  var zoom = 16;
  var featured_comp_building_id = "<%=@similar_properties.first.id rescue nil%>";
  var fullscreen_ctrl = true;
  if($("#mapHash").length > 0){
    // Custom options for map
    function initialize() {
      mob_map = $('#mob-map');
      <% if browser.device.mobile? %>
        fullscreen_ctrl = false;
      <%end%>
      var options = {
        zoom: zoom,
        mapTypeControl: false,
        zoomControlOptions: {
          position: google.maps.ControlPosition.RIGHT_CENTER
        },
        gestureHandling: 'greedy',
        //streetViewControl: false,
        //streetViewControlOptions: {
        //  position: google.maps.ControlPosition.RIGHT_CENTER
        //},
        fullscreenControl: fullscreen_ctrl
      };

      var static_options = {
        zoom: zoom,
        mapTypeControl: false,
        zoomControl: false,
        gestureHandling: 'none',
        disableDoubleClickZoom: true,
        fullscreenControl: false
      }

      var props           = $("#mapHash").data('map');
      var lat             = $("#mapHash").data('lat');
      var lng             = $("#mapHash").data('lng');
      current_building_id = parseInt($('#cu_building_id').val());
      var bounds          = new google.maps.LatLngBounds();
      infobox             = new InfoBubble({
                                    minWidth: 236,
                                    maxWidth: 250,
                                    position: new google.maps.LatLng(lng, lat),
                                    shadowStyle: 3,
                                    padding: 0,
                                    backgroundColor: 'rgb(255,255,255)',
                                    borderRadius: 2,
                                    arrowSize: 10,
                                    borderWidth: 0,
                                    borderColor: '#2c2c2c',
                                    disableAutoPan: true,
                                    hideCloseButton: false,
                                });

      // function that adds the markers on map
      var addMarkers = function(props, map) {
        $.each(props, function(i,prop) {
          var prop_id      = parseInt(prop.id);
          var default_icon = '';
          var latlng       = new google.maps.LatLng(prop.latitude, prop.longitude);
          
          if(prop_id != current_building_id){
              var price  = (prop.price == '' || prop.price == null) ? 0 : prop.price
              // default icon only when no price info available
              default_icon = new google.maps.MarkerImage(markerIcon(price, 'red'),
                              null,null,null, null);
          }else{
              default_icon = new google.maps.MarkerImage(markerIconBlue(),
                              null,null,null, null);
          }
          var marker = new google.maps.Marker({
            position: latlng,
            map: map,
            icon: default_icon,
            draggable: false,
          });

          // default opening first fetured comp building marker
          google.maps.event.addListener(marker, 'load', (function(marker, i) {
            if(prop_id == parseInt(featured_comp_building_id)){
              loadMarkerWindow(prop_id, map, marker);
            }
          })(marker, i));
          
          google.maps.event.addListener(marker, 'click', (function(marker, i) {
              return function() {
                loadMarkerWindow(prop.id, map, marker);
              }
          })(marker, i));

          google.maps.event.addDomListener(document.getElementById('header'),
          'click', function() {
            infobox.close();
          });

          google.maps.event.addDomListener(document.getElementById('content'),
          'click', function() {
            infobox.close();
          });

          google.maps.event.addListener(map, 'click', function() {
            infobox.close();
          });         
        });
      }

      var setShowMap = function(new_map){
        new_map.setCenter(new google.maps.LatLng(lat, lng));
        new_map.setZoom(zoom);
        addMarkers(props, new_map);
        var transitLayer = new google.maps.TransitLayer();
        transitLayer.setMap(new_map);
        showWindowResizeHandler(new_map);
      }
      
      setTimeout(function() {
        $('body').removeClass('notransition');
        map = new google.maps.Map(document.getElementById('mapView'), options);
        setShowMap(map);
        if(mob_map.length == 1){
          map2 = new google.maps.Map(document.getElementById('mob-map'), static_options);
          setShowMap(map2);
        }
      }, 300);
    }


  }

  function loadMarkerWindow(building_id, map, marker){
    $.post('/load_infobox', {
      object_id: building_id, 
      building_show: false,
      current_user_id: current_user_id,
    }, function(data){
      infobox.setContent(data.html);
      infobox.open(map, marker);
    });
  }

  // calculations for elements that changes size on window resize
  var showWindowResizeHandler = function(map) {
    windowHeight = window.innerHeight;
    windowWidth = $(window).width();
    contentHeight = windowHeight - $('#header').height();
    contentWidth = $('#content').width();

    $('#leftSide').height(contentHeight);
    $('.closeLeftSide').height(contentHeight);
    $('#wrapper').height(contentHeight);
    $('#mapView').height(contentHeight);
    //$('#content').height(contentHeight);
    if(map){
      google.maps.event.trigger(map, 'resize');
    }
  }

  $('.search-view-card').each(function(i, j){
    Card.loadDisplayImageAndCTALinks($(j).data('bid'));
  });

  google.maps.event.addDomListener(window, 'load', initialize);

  Transparentcity.initFancybox('#video-tours .tour-fbox');
</script>