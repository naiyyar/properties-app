function loadMarkerWindow(building_id, map, marker){
  $.post('/load_infobox', {
    object_id: building_id, 
    building_show: false,
    current_user_id: current_user_id,
  }, function(data){
    infobox.setContent(data.html);
    //infowindow.open(handler.getMap(), google.maps.markers[index]);
    //infobox.setPosition(latlng);
    //if (!infobox.isOpen()) {
      infobox.open(map, marker);
    //}
  });
}

function loadDisplayImage(building_id){
  var elem = $("#figure"+building_id)
  $.ajax({
    url: '/get_images',
    dataType: 'json',
    type: 'get',
    data: { building_id: building_id },
    success: function(response){
      elem.html(response.html);
      initLightSlider(elem.find('.gallery'));
    }
  });
}

function initLightSlider(elem){
  elem.lightSlider({
    item: 1,
    slideMargin: 0,
    loop: true,
    onBeforeSlide: function(el) {
       show_count_elem = el.parent().parent().prev();
       current_elem = show_count_elem.find('.current');
       current_elem.text(el.getCurrentSlideCount);
     }
  });
}

function createSidebarElem(json){
  var building_name = ''
  var address = json.building_street_address;
  if(json.building_name == undefined || json.building_name == ''){
    building_name = address;
  }else{
    building_name = json.building_name
  }

  var city = json.city;
  var state = json.state;
  var zipcode = json.zipcode;
  var full_address = address+','+' '+city+','+' '+state+' '+zipcode;

  if(building_name == ' '){
    building_name = address
  }
  
  return ("<h2>" + building_name + "</h2>" +
            "<div class='cardAddress'><span class='fa fa-map-marker'></span> "+full_address+"</div>"
          );
};

function bindElemToMarker(elem, marker, object){
  var price = (object.price == '' || object.price == null) ? 0 : object.price
  var card = elem.parent().parent().parent();
  card.on('mouseover', function(){
    marker.setIcon(markerIcon(price, 'green'));
  }).on('mouseout', function(){
    marker.setIcon(markerIcon(price, 'red'));
  });
};

function createSidebar(object, marker){
  var elem = $( createSidebarElem(object) );
  $('#building_details'+object.id).html(elem)
  //elem.appendTo('#building_details'+object.id);
  bindElemToMarker(elem, marker, object);
};

function markerIconBlue(){
  return "<%=asset_path('marker-blue.png')%>";
}

function markerIcon(price, type='red'){
  var path = '';
  //console.log(price)
  if(price == 0){
    if(type == 'red'){
      path = "<%=asset_path('markers/red_pin_p0.png')%>";
    }else{
      path = "<%=asset_path('markers/green_pin_p0.png')%>";
    }
  }else if(price == 1){
    if(type == 'red'){
      path = "<%=asset_path('markers/red_pin_p1.png')%>";
    }else{
      path = "<%=asset_path('markers/green_pin_p1.png')%>";
    }
  }else if(price == 2){
    if(type == 'red'){
      path = "<%=asset_path('markers/red_pin_p2.png')%>";
    }else{
      path = "<%=asset_path('markers/green_pin_p2.png')%>";
    }
  }else if(price == 3){
    if(type == 'red'){
      path = "<%=asset_path('markers/red_pin_p3.png')%>";
    }else{
      path = "<%=asset_path('markers/green_pin_p3.png')%>";
    }
  }else if(price == 4){
    if(type == 'red'){
      path = "<%=asset_path('markers/red_pin_p4.png')%>";
    }else{
      path = "<%=asset_path('markers/green_pin_p4.png')%>";
    }
  }else{
    path = "<%=asset_path('markers/red_pin_p0.png')%>";
  }

  return path
}

//
//****   START REDO BUTTON SCRIPTS   ****
//
function setRedoButtonPosition(map){
  controlUI.style.display = 'block';
  if(!draggedOnce){
    centerControlDiv.index = 1;
    if(width < 600){       
      map.controls[google.maps.ControlPosition.TOP_CENTER].push(centerControlDiv);
    }else{
      map.controls[google.maps.ControlPosition.TOP_LEFT].push(centerControlDiv);
    }
    draggedOnce = true;
  }
}

function getMoveData(map){
  if(dragged){
    currentLocation = map.getCenter()
    lat = currentLocation.lat();
    lng = currentLocation.lng();
    var query_strings = window.location.search;
    var orginal_url = '/custom_search';
    var new_loc_url = '';
    var q_params = 'latitude='+lat+'&longitude='+lng+'&zoomlevel='+zoomLevel;
    if(query_strings.includes('sort_by') || query_strings.includes('filter')){
      new_loc_url = orginal_url+query_strings+'&'+q_params;
    }else{
      new_loc_url = orginal_url+'?'+q_params;
    }
    location.href = new_loc_url+'&searched_by=latlng&search_term=custom';
  }
}

function createRedoButtonObject(map){
  centerControlDiv = document.createElement('div');
  centerControl = new RedoButton(centerControlDiv, map);
}

function RedoButton(controlDiv, map) {
  // Set CSS for the control border.
  controlUI = document.createElement('div');
  controlUI.style.backgroundColor = '#428bc9';
  // controlUI.style.border = '2px solid #fff';
  controlUI.style.borderRadius = '3px';
  controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
  controlUI.style.cursor = 'pointer';
  controlUI.style.marginTop = '8px';
  controlUI.style.marginLeft = width > 600 ? '71px' : '';
  controlUI.style.textAlign = 'center';
  controlUI.title = 'Click to recenter the map';
  controlUI.style.display = 'none';
  controlDiv.appendChild(controlUI);

  // Set CSS for the control interior.
  controlText = document.createElement('div');
  controlText.style.color = '#fff';
  //controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
  controlText.style.fontSize = '14px';
  controlText.style.lineHeight = '30px';
  controlText.style.paddingLeft = '5px';
  controlText.style.paddingRight = '5px';
  controlText.innerHTML = '<span class="fa fa-refresh"></span> Redo Search Here';
  controlUI.appendChild(controlText);

  // Setup the click event listeners: simply set the map to Chicago.
  controlUI.addEventListener('click', function() {
    getMoveData(map);
  });
}

//****   End Redo button   ****